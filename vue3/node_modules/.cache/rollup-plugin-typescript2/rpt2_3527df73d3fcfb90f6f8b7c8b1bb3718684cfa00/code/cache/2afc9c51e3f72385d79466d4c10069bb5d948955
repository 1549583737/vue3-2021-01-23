{"code":"export var mutableHandlers = {\r\n    // 目标源对象 属性 代理后的对象\r\n    get: function (target, key, receiver) {\r\n        console.log('get 方法执行');\r\n        return Reflect.get(target, key, receiver); // target[key]\r\n    },\r\n    set: function (target, key, value, receiver) {\r\n        console.log('set 方法执行');\r\n        console.log('代理对象receiver: ', receiver);\r\n        console.log('源对象target: ', target);\r\n        // target[key] = value;\r\n        var result = Reflect.set(target, key, value, receiver);\r\n        // effectStack.forEach(effect => effect)\r\n        return result;\r\n    } // 当设置值的时候 应该通知对应的effect来更新\r\n};\r\n// 默认加载页面时，会先调用一次effect,此时effect方法中的数据会进行取值操作-》get方法\r\n// 让对应的属性保存当前的effect =》 对象中name属性 对应的effect有几个\r\n// 某个对象中 name属性变化了， 需要找到对应的effect列表让他依次执行\r\n","references":["/Users/zyx/study/珠峰/第八期/2021-01-23/vue3/src/reactivity/effect.ts","/Users/zyx/study/珠峰/第八期/2021-01-23/vue3/src/reactivity/effect.ts"]}
